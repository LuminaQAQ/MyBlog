import{_ as s,c as i,o as a,a3 as t}from"./chunks/framework.QBSm2tx5.js";const n="/MyBlog/assets/%E9%BB%98%E8%AE%A4%E6%8C%89%E9%92%AE.Bqzz3D02.png",e="/MyBlog/assets/%E6%8C%89%E9%92%AE%E7%BB%84.DwH-usqu.png",u=JSON.parse('{"title":"WebComponent 的 css 伪类","description":"","frontmatter":{},"headers":[],"relativePath":"我的笔记/WebComponent-css伪类.md","filePath":"我的笔记/WebComponent-css伪类.md"}'),h={name:"我的笔记/WebComponent-css伪类.md"},l=t(`<h1 id="webcomponent-的-css-伪类" tabindex="-1">WebComponent 的 css 伪类 <a class="header-anchor" href="#webcomponent-的-css-伪类" aria-label="Permalink to &quot;WebComponent 的 css 伪类&quot;">​</a></h1><h2 id="_1-host-host-和-slotted" tabindex="-1">1. :host / :host() 和 ::slotted() <a class="header-anchor" href="#_1-host-host-和-slotted" aria-label="Permalink to &quot;1. :host / :host() 和 ::slotted()&quot;">​</a></h2><ul><li>:host / :host() : 用于指定 shadowRoot 的样式(即定义子样式).</li><li>::slotted() : 用于操作 slot 的样式(父改子). <br> 一般用于 两个组件嵌套, 形成了父子关系</li></ul><p>父组件</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::slotted(</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ea-button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --margin-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>子组件</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --margin-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 指定选择器, 如我的 html tag 是 ea-button-group  */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ea-button-group</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --margin-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>修改前(ea-button) <img src="`+n+'" alt="默认" title="默认"></p><p>修改后(ea-button-group + ea-button) <img src="'+e+`" alt="父组件+子组件" title="父组件+子组件"></p><h2 id="_2-host-context" tabindex="-1">2. :host-context() <a class="header-anchor" href="#_2-host-context" aria-label="Permalink to &quot;2. :host-context()&quot;">​</a></h2><p>主要是用来选择根宿主(不是 webcomponent 也可以)</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:host-context(</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ea-button-group</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_3-defined" tabindex="-1">3. :defined <a class="header-anchor" href="#_3-defined" aria-label="Permalink to &quot;3. :defined&quot;">​</a></h2>`,13),p=[l];function o(k,d,r,E,c,g){return a(),i("div",null,p)}const b=s(h,[["render",o]]);export{u as __pageData,b as default};
